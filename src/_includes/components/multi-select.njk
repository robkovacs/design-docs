{% from './chip.njk' import render as chip %}
{% from './input-label.njk' import render as inputLabel %}
{% from './input-message.njk' import render as inputMessage %}
{% from './system-icon.njk' import render as systemIcon %}

{% set localeData = {
    "en_US": {
        placeholder: "Select&hellip;",
        listboxEmpty: "No matching options"
    },
    "de_DE": {
        placeholder: "WÃ¤hlen&hellip;",
        listboxEmpty: "Keine passenden Optionen"
    }
} %}

{% macro render(options) %}
    {% set required = (options.required | default(true)) %}
    {% set id = (options.id | default(nanoid())) %}
    {% set typeaheadId = nanoid() %}
    {% set listboxId = nanoid() %}
    {% set locale = options.locale | default("en_US") %}
    {% set placeholder = options.placeholder | default(localeData[locale].placeholder) %}
    
    {% set classes -%}
    {#- TODO: make this into a custom filter -#}
        {%- if options.classes -%}
            {%- if options.classes == (options.classes | string) -%}
                {{ options.classes }}
            {%- else -%}
                {{ options.classes | join(' ') }}
            {%- endif -%}
        {%- endif -%}
    {%- endset %}

    {% if options.label or options.messages %}
        <div class="form-field">
    {% endif %}
            {{ inputLabel(options.label, required, typeaheadId, locale = locale) if options.label }}
            {{ inputMessage("help", options.helpText) if options.helpText }}
            <div class="multi-select__wrapper">
                <input type="hidden"
                    class="multi__select--input {{ classes }}"
                    id="{{ id | safe }}"
                    {{ ('aria-disabled="true"' | safe) if options.disabled }}
                    {{ 'required' if required }}
                    {% for key, value in options.attributes %}
                        {% if key !== "id" %}
                            {{ key }}="{{ value | safe }}"
                        {% endif %}
                    {% endfor %}
                />
                <div class="multi-select__container" tabindex="-1">
                    <div class="multi-select__inner-container">
                        <input
                            type="text"
                            id="{{ typeaheadId | safe }}"
                            class="multi-select__typeahead"
                            aria-autocomplete="list"
                            aria-controls="{{ listboxId | safe }}"
                            aria-expanded="false"
                            aria-haspopup="listbox"
                            placeholder="{{ placeholder | safe }}"
                            {% for key, value in options.attributes %}
                                {% if key !== "id" %}
                                    {% if value !== null %}
                                        {{ key | safe }}="{{ value | safe }}"
                                    {% else %}
                                        {{ key | safe }}
                                    {% endif %}
                                {% endif %}
                            {% endfor %}
                        />
                        {{ systemIcon('chevron-down', classes = 'multi-select__icon') }}
                    </div>
                </div>
                <ul class="multi-select__listbox" aria-multiselectable="true" id="{{ listboxId | safe }}" tabindex="-1" hidden>
                    {% if options.options %}
                        {% for item in options.options %}
                            {% if item.options %}
                                {% set labelId = nanoid() %}
                                {% set groupDisabled = item.disabled | default(false) %}
                                <li class="multi-select__optgroup" role="group" aria-labelledby="{{ labelId }}" {{ ('aria-disabled="true"' | safe) if item.disabled }}>
                                    <div class="multi-select__optgroup-label" id="{{ labelId }}">{{ item.label }}</div>
                                    <ul class="multi-select__optgroup-options">    
                                        {% for option in item.options %}
                                        {% set value = option.value | default(option.label) %}
                                            <li
                                                class="multi-select__option"
                                                id="{{ nanoid() }}"
                                                role="option"
                                                aria-selected="false"
                                                {{ ('aria-disabled="true"' | safe) if option.disabled or groupDisabled }}
                                                data-value="{{ value | safe }}"
                                            >
                                                {{ option.label }}
                                            </li>
                                        {% endfor %}                                    
                                    </ul>
                                </li>
                            {% else %}
                                {% set value = item.value | default(item.label) %}
                                <li
                                    class="multi-select__option"
                                    role="option"
                                    aria-selected="false"
                                    id="{{ nanoid() }}"
                                    {{ ('aria-disabled="true"' | safe) if item.disabled }}
                                    data-value="{{ value | safe }}"
                                >
                                    {{ item.label }}
                                </li>
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                    <span class="multi-select__listbox-empty-message" {{ "hidden" if options.options }}>{{ localeData[locale].listboxEmpty }}</span>
                </ul>
            </div>
        {% if options.messages %}
            <div class="input-message__list">
            {% for message in options.messages %}
                {{ inputMessage(message.type, message.message) }}
            {% endfor %} 
            </div>
        {% endif %}
    {% if options.label or options.messages %}
        </div>
    {% endif %}
{% endmacro %}